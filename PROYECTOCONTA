import tkinter as tk
from tkinter import messagebox

class InventarioApp:
    def __init__(self, root):
        self.root = root
        self.root.title("GAMEWORLDSTORE - Inventario")
        self.root.geometry("600x400")

        # Etiquetas con fuente más pequeña
        self.etiqueta_titulo = tk.Label(self.root, text="INVENTARIO", font=("Helvetica", 14, "bold"))
        self.etiqueta_titulo.grid(row=0, column=1, pady=10)

        # Campos de Entrada con fuente más pequeña y estilo
        self.etiqueta_producto = tk.Label(self.root, text="PRODUCTO", font=("Helvetica", 10))
        self.etiqueta_producto.grid(row=1, column=0, padx=10, pady=5)
        self.entry_producto = tk.Entry(self.root, font=("Helvetica", 10))
        self.entry_producto.grid(row=1, column=1, padx=10, pady=5)

        # Campo de Cantidad
        self.etiqueta_cantidad = tk.Label(self.root, text="CANTIDAD", font=("Helvetica", 10))
        self.etiqueta_cantidad.grid(row=2, column=0, padx=10, pady=5)
        self.entry_cantidad = tk.Entry(self.root, font=("Helvetica", 10))
        self.entry_cantidad.grid(row=2, column=1, padx=10, pady=5)

        # Campo de Precio
        self.etiqueta_precio = tk.Label(self.root, text="PRECIO", font=("Helvetica", 10))
        self.etiqueta_precio.grid(row=3, column=0, padx=10, pady=5)
        self.entry_precio = tk.Entry(self.root, font=("Helvetica", 10))
        self.entry_precio.grid(row=3, column=1, padx=10, pady=5)

        # Botones de Acción centrados en la parte superior derecha
        self.boton_agregar_producto = tk.Button(self.root, text="Agregar PRODUCTO", command=self.agregar_producto, font=("Helvetica", 12, "bold"), bg="#4CAF50", fg="white", relief="raised")
        self.boton_agregar_producto.grid(row=1, column=2, padx=30, pady=5)

        self.boton_cambiar_precio = tk.Button(self.root, text="Cambiar PRECIO", command=self.cambiar_precio, font=("Helvetica", 12, "bold"), bg="#FF9800", fg="white", relief="raised")
        self.boton_cambiar_precio.grid(row=2, column=2, padx=30, pady=5)

        # Tabla con columnas Producto, Cantidad y Precio
        self.tabla_encabezado = tk.Label(self.root, text="Producto                | Cantidad | Precio", font=("Helvetica", 10, "bold"))
        self.tabla_encabezado.grid(row=4, column=0, columnspan=3, pady=5)

        # Área para mostrar detalles del inventario (tabla)
        self.texto_inventario = tk.Text(self.root, height=10, width=50, font=("Helvetica", 10), wrap="word", bd=2, relief="sunken", padx=10, pady=10)
        self.texto_inventario.grid(row=5, column=0, columnspan=3, padx=10, pady=10)

        # Inventario almacenado como una lista de diccionarios
        self.inventario = []

    def agregar_producto(self):
        producto = self.entry_producto.get()
        cantidad = self.entry_cantidad.get()
        precio = self.entry_precio.get()

        if producto and cantidad and precio:
            # Agregar el producto al inventario
            self.inventario.append({"producto": producto, "cantidad": cantidad, "precio": precio})
            self.actualizar_inventario()
            self.entry_producto.delete(0, tk.END)
            self.entry_cantidad.delete(0, tk.END)
            self.entry_precio.delete(0, tk.END)
        else:
            messagebox.showerror("Error", "Por favor ingresa el producto, cantidad y precio")

    def cambiar_precio(self):
        # Abrir ventana emergente para cambiar el precio
        def actualizar_precio():
            producto = entry_producto.get()
            nuevo_precio = entry_nuevo_precio.get()

            if producto and nuevo_precio:
                for item in self.inventario:
                    if item["producto"].lower() == producto.lower():
                        item["precio"] = nuevo_precio
                        self.actualizar_inventario()
                        messagebox.showinfo("Exito", f"El precio de {producto} ha sido actualizado a {nuevo_precio}")
                        ventana_cambiar_precio.destroy()
                        return
                messagebox.showerror("Error", "Producto no encontrado en el inventario")
            else:
                messagebox.showerror("Error", "Por favor ingresa el nombre del producto y el nuevo precio")

        # Crear ventana para cambiar el precio
        ventana_cambiar_precio = tk.Toplevel(self.root)
        ventana_cambiar_precio.title("Cambiar Precio")
        ventana_cambiar_precio.geometry("400x200")

        # Etiquetas y campos para ingresar producto y nuevo precio
        etiqueta_producto = tk.Label(ventana_cambiar_precio, text="Nombre del Producto", font=("Helvetica", 10))
        etiqueta_producto.pack(pady=5)
        entry_producto = tk.Entry(ventana_cambiar_precio, font=("Helvetica", 10))
        entry_producto.pack(pady=5)

        etiqueta_nuevo_precio = tk.Label(ventana_cambiar_precio, text="Nuevo Precio", font=("Helvetica", 10))
        etiqueta_nuevo_precio.pack(pady=5)
        entry_nuevo_precio = tk.Entry(ventana_cambiar_precio, font=("Helvetica", 10))
        entry_nuevo_precio.pack(pady=5)

        # Botón para actualizar el precio
        boton_actualizar = tk.Button(ventana_cambiar_precio, text="Actualizar Precio", command=actualizar_precio, font=("Helvetica", 12, "bold"), bg="#FF9800", fg="white", relief="raised")
        boton_actualizar.pack(pady=10)

    def actualizar_inventario(self):
        # Limpiar el cuadro de texto y mostrar el inventario actualizado
        self.texto_inventario.delete(1.0, tk.END)
        for item in self.inventario:
            self.texto_inventario.insert(tk.END, f"{item['producto']}                | {item['cantidad']} | {item['precio']}\n")

# Crear la ventana principal de la aplicación
root = tk.Tk()
app = InventarioApp(root)
root.mainloop()
